@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Nanum+Myeongjo:wght@400;700;800&display=swap');
@import url('https://cdn.jsdelivr.net/npm/xeicon@2.3.3/xeicon.min.css');
/* https:없이 //는 작동은 하지만 오프라인 작업할 때는 안 보인다. 깃허브 올렸을때 안나옴 */

body {
    font-family: 'Noto Sans KR', sans-serif;
}

.container {
    position: relative;
    display: flex;
    width: 1200px;
    margin: 0 auto;
}

.top_banner {
    padding: 25px 0;
    background: #f1f1f1;
}

.top_banner .container {
    display: block;
}

/* 두개를 만들 때 아예 flexContainer를 따로 만들어 쓰는 사람이 있다 */

.top_banner h2 {
    font-family: 'Nanum Myeongjo', serif;
    font-size: 30px;
    margin: 0 0 10px 0;
}

.top_banner p {
    font-size: 15px;
    /* 기본 폰트 사이즈는 16인데 노트 산스는 홀수가 깨지는게 덜하다 */
    font-weight: 300;
}

.top_banner a {
    /* display: block; 을 하면 옆에 아무것도 없기 때문에 밑으로 내려간다 */
    padding: 2px 15px 4px 15px;
    /* 인라인은 박스가 아니라서 아래위로 패딩 마진을 안먹는다 좌우는 먹는다
    인라인에는 라인하르트도 먹히지 않는데, block을 먹여서 박스로 만들면 라인하이트가 박스 안의 내용물에는 적용이 된다
    볼더나 백그라운드를 주면 패딩을 실제로 먹지는 않지만 공간에 패딩이 먹는것처럼 보인다 */
    border: 1px solid #333;
    margin: 0 0 0 20px;
}

.top_banner i {
    position: absolute;
    top: 0;
    right: 0;
    padding: 10px;
    background: #333;
    border-radius: 50%;
    color: #f1f1f1;
    cursor: pointer;
}

.header .gnb {
    line-height: 100px;
}

/* .header .gnb .container {
    justify-content: space-between;
    많이 쓰는 방법
} */

.header .gnb nav {
    margin: 0 0 0 auto;
}

.header .gnb form {
    margin: 0 0 0 50px;
}

nav>ul {
    display: flex;
    /* gap: 40px; */
}

nav>ul>li {
    /* padding: 0 20px;
    이렇게 하면 옆의 다른 공간의 픽셀까지 계산해서 빼줘야한다 */
}

nav>ul>li~li::before {
    content: "";
    display: inline-block;
    width: 1px;
    height: 13px;
    background: #ddd;
    margin: 0 20px;
}

#searchForm input[type="text"] {
    /* 아이디는 #으로 잡을 수 있다 */
    border: none;
    border-bottom: 1px solid #ddd;
    outline: none;
    padding: 5px 0;
}

#searchForm button {
    border: none;
    outline: none;
    background: transparent;
    font-size: 30px;
}

.main_visual figure {
    position: relative;
    height: 800px;
}

.main_visual .item01 {
    background: url(../img/mainvisual01.jpg) no-repeat center center/cover;
}

.main_visual .item02 {
    background: url(../img/mainvisual02.jpg) no-repeat center center/cover;
}

.main_visual .item03 {
    background: url(../img/mainvisual03.jpg) no-repeat center center/cover;
}

.main_visual .container {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
}

/* .main_visual figure {
font-size: 100px;
color: #fff;
} */

/* .main_visual figure.on {
    color: #f00;
} */

.main_visual figure h3 {
    font-size: 60px;
    font-weight: 900;
    margin: 0 0 20px 0;
    text-shadow: 0 0 2px #333;
    /* 가로 세로 흐림 */
}

.main_visual figure.item02 h3 {
    color: #333;
    text-shadow: 0 0 2px #fff;
}

.main_visual figure p {
    font-size: 13px;
    font-size: 300;
    margin: 0 0 20px 0;
}

.main_visual figure.item02 p {
    color: #333;
}

.main_visual figure a {
    display: inline-block;
    font-size: 13px;
    font-weight: 300;
    text-align: center;
    border: 1px solid #fff;
    background: #333;
    padding: 5px 20px 8px 20px;
}

.main_visual figure h3 {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on h3 {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s;
    /* 백을 안붙여주기 위해서 이쪽에 transition을 붙여줬다
    .main_visual figure h3 { 쪽에 transition을 붙여주면 백에서 자꾸 움직인다고 생성된다 */
}

.main_visual figure p {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on p {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s 0.5s;
}

.main_visual figure a {
    transform: translateY(100px);
    opacity: 0;
}

.main_visual figure.on a {
    transform: translateY(0);
    opacity: 1;
    transition: 0.5s 1s;
}

.main_visual .slick-dots {
    position: absolute;
    bottom: 80px;
    left: 50%;
    transform: translateX(-50%);
}

.main_visual .slick-dots li {
    display: inline-block;
    width: 80px;
    height: 5px;
    background: #333;
    margin: 0 5px;
}

.main_visual .slick-dots li::after {
    content: "";
    display: block;
    width: 0%;
    height: 100%;
    background: #f00;
}

.main_visual .slick-dots li.slick-active::after {
    width: 100%;
    transition: 3s;
}

.main_visual .slick-dots button {
    display: none;
}

/* .slide_num {
    position: absolute;
    top: 100px;
    right: 100px;
    font-size: 100px;
    color: #fff;
} */

.basic {
    padding: 100px 0;
    text-align: center;
}


/* .dtainer {
    width: 1230px;
    라인이 15픽셀씩 양 옆 밖으로 나가 있을 것이기 때문에 30을 더 더해준다
    margin: 0 auto;
}

.dtainer::after {
    content: "";
    display: block;
    clear: both;
}

유명한 클리어 픽스라고 부르는 방법

.dtainer figure {
    float: left;
    박스를 가로로 붙일 수 있음
    width: 33.333333333%;
    수작업으로 바꿔줘야하는 단점
    padding: 0 15px;
}

.dtainer figure img {
    max-width: 100%;
} */

.basic .container {
    gap: 30px;
}

section h2 {
    font-size: 21px;
    font-weight: 700;
    margin: 0 0 10px 0;
}

section p {
    font-size: 15px;
    font-weight: 300;
    margin: 0 0 30px 0;
}

.basic figure {
    flex: 1;
    overflow: hidden;
}

.basic figure .inbox {
    /* 박스를 inbox로 한꺼풀 더 싸줌 */
    overflow: hidden;
    border-radius: 71% 29% 56% 44% / 28% 25% 75% 72%;
    transition: 0.5s 0.5s;
    margin: 0 0 30px 0;
}

.basic figure:hover .inbox {
    border-radius: 10px;
}


.basic figure img {
    transition: 0.5s;
}

.basic figure:hover img {
    transform: scale(1.25);
}

.basic figure strong {
    /* 인라인의 속성을 가지고 있기 때문에 ...하면 가로 정렬이 된다
    display: block;으로 박스를 펴준다 */
    display: block;
    margin: 0 0 20px 0;
}

.basic figure a {
    display: inline-block;
    /* 패딩과 마진을 먹이기 위해 */
    background: #333;
    line-height: 30px;
    color: #fff;
    padding: 5px 20px 10px 20px;
    /* 디스플레이 블록과 마진형 오토로 사이즈를 줘서 만들면 안에 든 글자수에 따라 박스의 크기가 변화하지 않을 것이다 */
}

.fixed_bg {
    padding: 100px 0;
    text-align: center;
    color: #fff;
    background: url(../img/mainvisual01.jpg) no-repeat fixed center top/cover;
    /* cover는 백그라운드가 잘리든말든 박스를 가득 채우라 */
    filter: grayscale(1);
    /* background-attachment: fixed; */
}

.fixed_bg i {
    padding: 10px;
    background: #333;
    margin: 5px 0 0 20px;
    border-radius: 50%;
    vertical-align: middle;
}

.fixed_bg span {
    vertical-align: middle;
    /* 여러개되면 자꾸 꼬임 */
}

.movie {
    padding: 100px 0;
}

.movie .container {
    gap: 50px;
}

.movie .container figure {
    flex: 1;
}

.movie .container .dec {
    flex: 1;
    padding: 100px 0;
}

/* .movie .container>* {
    flex: 1;
} */

.movie video {
    max-width: 100%;
}

.movie .dec i {
    padding: 10px;
    background: #333;
    color: #fff;
    margin: 0 5px 0 0;
}

.utube {
    padding: 150px 0;
    text-align: center;
    color: #fff;
    filter: grayscale(1);
}

.utube i {
    padding: 20px;
    background: rgba(0, 0, 0, 0.5);
    margin: 0 20px;
    font-size: 25px;
    cursor: pointer;
}